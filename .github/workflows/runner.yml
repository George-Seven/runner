name: Runner
on:
#  schedule:
#    - cron: "0 */5 * * *"
  workflow_dispatch:
    inputs:
      onion_url:
        description: 'Onion URL'
        required: false
        type: string
      ntfy_secret:
        description: 'Ntfy Secret'
        required: false
        type: string

concurrency:
  group: runner
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ONION_URL_SECRET: "${{ github.event.inputs.onion_url }}"
      NTFY_URL_SECRET: "${{ github.event.inputs.ntfy_secret }}"
    steps:
      - name: Runner
        run: |
          ONION_URL="$(code to decode ONION_URL_SECRET using key $RUNNER_AUTHTOKEN)"
          NTFY_URL="$(code to decode NTFY_URL_SECRET using key $RUNNER_AUTHTOKEN)"
          sudo sed -i -E 's|ExecStart=/usr/bin/dockerd.*|ExecStart=/usr/bin/dockerd -H fd:// -H tcp://localhost:2375|g' /lib/systemd/system/docker.service
          sudo systemctl daemon-reload
          sudo systemctl restart docker
          wget -O ntfy.deb https://github.com/binwiederhier/ntfy/releases/download/v2.11.0/ntfy_2.11.0_linux_amd64.deb
          sudo apt install -y ./ntfy.deb
          sudo apt install -y expect
          sudo wget -O /usr/local/bin/onionpipe https://github.com/cmars/onionpipe/releases/download/v1.1.11/onionpipe-linux-amd64-static
          sudo chmod 755 /usr/local/bin/onionpipe
          
          if [[ -n "$ONION_URL" ]]; then
            echo "Onion URL provided"
            start-stop-daemon --start --background --chdir "$(dirname "$(mktemp --dry-run)")" --exec "$(which onionpipe)" -- "$ONION_URL"~4444
          else
            echo "No Onion URL provided."
            exit 1
          fi
          
          if [[ -z "$NTFY_URL" ]]; then
            echo "No Ntfy Secret provided."
            exit 1
          fi

          (
          expect -c '
              spawn onionpipe 2375~2375
              set timeout 999999
              expect {
                  -re {.*=> *([a-z0-9]+\.onion):2375} {
                      set onion $expect_out(1,string)
                      exec echo $onion > ./onion_tcp_url.txt
                      exp_continue
                  }
              }
          ' >/dev/null 2>&1 &
          )

          while true; do
              unset ONION_TCP_URL
              ONION_TCP_URL=$(cat ./onion_tcp_url.txt 2>/dev/null || true)
              if [[ "$ONION_TCP_URL" =~ ^[a-z0-9]+\.onion$ ]]; then
                  echo "Captured valid Onion URL"
                  break
              fi
              sleep 1
          done

          ntfy(){

          while true; do
              ntfy publish "$NTFY_URL" "$ONION_TCP_URL" >/dev/null 2>&1
              sleep 10
          done

          }

          ntfy &

          while true; do
              echo "Running" >/dev/null 2>&1
              sleep 10
          done
